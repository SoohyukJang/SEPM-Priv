{"ast":null,"code":"// 네트워크 상태 감지 유틸리티\nconst NetworkUtils = {\n  // 네트워크 연결 상태 확인\n  isOnline: () => {\n    return navigator.onLine;\n  },\n  // 네트워크 상태 이벤트 리스너 등록\n  addNetworkStatusListener: (onlineCallback, offlineCallback) => {\n    window.addEventListener('online', onlineCallback);\n    window.addEventListener('offline', offlineCallback);\n\n    // 현재 상태 바로 반환\n    return navigator.onLine;\n  },\n  // 네트워크 상태 이벤트 리스너 제거\n  removeNetworkStatusListener: (onlineCallback, offlineCallback) => {\n    window.removeEventListener('online', onlineCallback);\n    window.removeEventListener('offline', offlineCallback);\n  },\n  // API 연결 가능 여부 테스트 (더 정확한 온라인 확인)\n  testApiConnection: async (testUrl = 'https://api.spoonacular.com/') => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\n      const response = await fetch(testUrl, {\n        method: 'HEAD',\n        mode: 'no-cors',\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      return true;\n    } catch (error) {\n      console.log('API connection test failed:', error.message);\n      return false;\n    }\n  }\n};\nexport default NetworkUtils;","map":{"version":3,"names":["NetworkUtils","isOnline","navigator","onLine","addNetworkStatusListener","onlineCallback","offlineCallback","window","addEventListener","removeNetworkStatusListener","removeEventListener","testApiConnection","testUrl","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","mode","signal","clearTimeout","error","console","log","message"],"sources":["C:/Users/SoohyukJANG/Documents/GitHub/SEPM-Priv/SEPM/src/utils/NetworkUtils.js"],"sourcesContent":["\r\n// 네트워크 상태 감지 유틸리티\r\nconst NetworkUtils = {\r\n  // 네트워크 연결 상태 확인\r\n  isOnline: () => {\r\n    return navigator.onLine;\r\n  },\r\n  \r\n  // 네트워크 상태 이벤트 리스너 등록\r\n  addNetworkStatusListener: (onlineCallback, offlineCallback) => {\r\n    window.addEventListener('online', onlineCallback);\r\n    window.addEventListener('offline', offlineCallback);\r\n    \r\n    // 현재 상태 바로 반환\r\n    return navigator.onLine;\r\n  },\r\n  \r\n  // 네트워크 상태 이벤트 리스너 제거\r\n  removeNetworkStatusListener: (onlineCallback, offlineCallback) => {\r\n    window.removeEventListener('online', onlineCallback);\r\n    window.removeEventListener('offline', offlineCallback);\r\n  },\r\n  \r\n  // API 연결 가능 여부 테스트 (더 정확한 온라인 확인)\r\n  testApiConnection: async (testUrl = 'https://api.spoonacular.com/') => {\r\n    try {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\r\n      \r\n      const response = await fetch(testUrl, {\r\n        method: 'HEAD',\r\n        mode: 'no-cors',\r\n        signal: controller.signal\r\n      });\r\n      \r\n      clearTimeout(timeoutId);\r\n      return true;\r\n    } catch (error) {\r\n      console.log('API connection test failed:', error.message);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default NetworkUtils;\r\n"],"mappings":"AACA;AACA,MAAMA,YAAY,GAAG;EACnB;EACAC,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOC,SAAS,CAACC,MAAM;EACzB,CAAC;EAED;EACAC,wBAAwB,EAAEA,CAACC,cAAc,EAAEC,eAAe,KAAK;IAC7DC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEH,cAAc,CAAC;IACjDE,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,eAAe,CAAC;;IAEnD;IACA,OAAOJ,SAAS,CAACC,MAAM;EACzB,CAAC;EAED;EACAM,2BAA2B,EAAEA,CAACJ,cAAc,EAAEC,eAAe,KAAK;IAChEC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEL,cAAc,CAAC;IACpDE,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAEJ,eAAe,CAAC;EACxD,CAAC;EAED;EACAK,iBAAiB,EAAE,MAAAA,CAAOC,OAAO,GAAG,8BAA8B,KAAK;IACrE,IAAI;MACF,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MACxC,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAMH,UAAU,CAACI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;MAE5D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,OAAO,EAAE;QACpCQ,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAET,UAAU,CAACS;MACrB,CAAC,CAAC;MAEFC,YAAY,CAACR,SAAS,CAAC;MACvB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAACG,OAAO,CAAC;MACzD,OAAO,KAAK;IACd;EACF;AACF,CAAC;AAED,eAAe3B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}