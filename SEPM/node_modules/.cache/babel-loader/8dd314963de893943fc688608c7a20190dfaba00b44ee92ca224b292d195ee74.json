{"ast":null,"code":"import { getFirestore, collection, doc, getDoc, setDoc, updateDoc, arrayUnion, arrayRemove, query, where, getDocs } from 'firebase/firestore';\nimport { app } from '../firebase/config';\nconst API_KEY = 'eeb775beabdd459eb5f8e5983978fff1';\nconst API_BASE_URL = 'https://api.spoonacular.com';\nconst db = getFirestore(app);\n\n// Sample data to use when API calls fail\nconst sampleRecipes = [{\n  id: 715538,\n  title: \"Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs\",\n  image: \"https://spoonacular.com/recipeImages/715538-312x231.jpg\",\n  readyInMinutes: 45,\n  servings: 2,\n  vegetarian: true,\n  vegan: false,\n  glutenFree: false,\n  dairyFree: false\n}, {\n  id: 716429,\n  title: \"Simple Skillet Lasagna\",\n  image: \"https://spoonacular.com/recipeImages/716429-312x231.jpg\",\n  readyInMinutes: 35,\n  servings: 4,\n  vegetarian: false,\n  vegan: false,\n  glutenFree: false,\n  dairyFree: false\n}, {\n  id: 715497,\n  title: \"Berry Banana Breakfast Smoothie\",\n  image: \"https://spoonacular.com/recipeImages/715497-312x231.jpg\",\n  readyInMinutes: 5,\n  servings: 1,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 721146,\n  title: \"Homemade Strawberry Lemonade\",\n  image: \"https://spoonacular.com/recipeImages/721146-312x231.jpg\",\n  readyInMinutes: 15,\n  servings: 8,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 782622,\n  title: \"Chocolate Peanut Butter Smoothie\",\n  image: \"https://spoonacular.com/recipeImages/782622-312x231.jpg\",\n  readyInMinutes: 5,\n  servings: 1,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: false\n}, {\n  id: 794349,\n  title: \"Broccoli and Chickpea Rice Salad\",\n  image: \"https://spoonacular.com/recipeImages/794349-312x231.jpg\",\n  readyInMinutes: 45,\n  servings: 6,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 715415,\n  title: \"Red Lentil Soup with Chicken and Turnips\",\n  image: \"https://spoonacular.com/recipeImages/715415-312x231.jpg\",\n  readyInMinutes: 55,\n  servings: 8,\n  vegetarian: false,\n  vegan: false,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 716406,\n  title: \"Asparagus and Pea Soup\",\n  image: \"https://spoonacular.com/recipeImages/716406-312x231.jpg\",\n  readyInMinutes: 30,\n  servings: 2,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 644387,\n  title: \"Garlicky Kale\",\n  image: \"https://spoonacular.com/recipeImages/644387-312x231.jpg\",\n  readyInMinutes: 45,\n  servings: 2,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 715446,\n  title: \"Slow Cooker Beef Stew\",\n  image: \"https://spoonacular.com/recipeImages/715446-312x231.jpg\",\n  readyInMinutes: 490,\n  servings: 6,\n  vegetarian: false,\n  vegan: false,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 782601,\n  title: \"Red Kidney Bean Jambalaya\",\n  image: \"https://spoonacular.com/recipeImages/782601-312x231.jpg\",\n  readyInMinutes: 45,\n  servings: 6,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 795751,\n  title: \"Chicken Fajita Stuffed Bell Pepper\",\n  image: \"https://spoonacular.com/recipeImages/795751-312x231.jpg\",\n  readyInMinutes: 45,\n  servings: 6,\n  vegetarian: false,\n  vegan: false,\n  glutenFree: true,\n  dairyFree: false\n}, {\n  id: 766453,\n  title: \"Hummus and Veggies Wrap\",\n  image: \"https://spoonacular.com/recipeImages/766453-312x231.jpg\",\n  readyInMinutes: 45,\n  servings: 2,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 716627,\n  title: \"Easy Homemade Rice and Beans\",\n  image: \"https://spoonacular.com/recipeImages/716627-312x231.jpg\",\n  readyInMinutes: 35,\n  servings: 2,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 798400,\n  title: \"Spicy Black Bean and Corn Burgers\",\n  image: \"https://spoonacular.com/recipeImages/798400-312x231.jpg\",\n  readyInMinutes: 25,\n  servings: 12,\n  vegetarian: true,\n  vegan: true,\n  glutenFree: true,\n  dairyFree: true\n}, {\n  id: 646738,\n  title: \"Grilled Salmon with Avocado Greek Salsa and Orzo\",\n  image: \"https://spoonacular.com/recipeImages/646738-312x231.jpg\",\n  readyInMinutes: 15,\n  servings: 4,\n  vegetarian: false,\n  vegan: false,\n  glutenFree: false,\n  dairyFree: true\n}];\n\n// Filter sample recipes based on user filters\nconst filterSampleRecipes = filters => {\n  let filtered = [...sampleRecipes];\n  if (filters.query) {\n    const query = filters.query.toLowerCase();\n    filtered = filtered.filter(recipe => recipe.title.toLowerCase().includes(query));\n  }\n  if (filters.diet === 'vegetarian') {\n    filtered = filtered.filter(recipe => recipe.vegetarian);\n  } else if (filters.diet === 'vegan') {\n    filtered = filtered.filter(recipe => recipe.vegan);\n  } else if (filters.diet === 'gluten free') {\n    filtered = filtered.filter(recipe => recipe.glutenFree);\n  } else if (filters.diet === 'dairy free') {\n    filtered = filtered.filter(recipe => recipe.dairyFree);\n  }\n  if (filters.maxReadyTime) {\n    filtered = filtered.filter(recipe => recipe.readyInMinutes <= filters.maxReadyTime);\n  }\n  return filtered;\n};\nexport const fetchRecipes = async filters => {\n  try {\n    const {\n      query,\n      cuisine,\n      diet,\n      intolerances,\n      maxReadyTime,\n      sort\n    } = filters;\n\n    // Use direct URL construction\n    let url = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=eeb775beabdd459eb5f8e5983978fff1\";\n\n    // Add parameters\n    url += \"&number=50\";\n    if (query) url += \"&query=\" + encodeURIComponent(query);\n    if (cuisine) url += \"&cuisine=\" + encodeURIComponent(cuisine);\n    if (diet) url += \"&diet=\" + encodeURIComponent(diet);\n    if (intolerances && intolerances.length > 0) url += \"&intolerances=\" + encodeURIComponent(intolerances.join(','));\n    if (maxReadyTime) url += \"&maxReadyTime=\" + maxReadyTime;\n\n    // Add sort parameter\n    if (sort === 'popularity') {\n      url += '&sort=popularity';\n    } else if (sort === 'healthiness') {\n      url += '&sort=healthiness';\n    } else if (sort === 'time') {\n      url += '&sort=time';\n    } else {\n      url += '&sort=popularity';\n    }\n\n    // Add additional information\n    url += '&addRecipeInformation=true';\n    url += '&fillIngredients=true';\n    console.log(\"Fetching recipes with URL:\", url);\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        console.warn(\"API request failed with status \" + response.status + \". Using sample data.\");\n        console.info(\"This is expected behavior due to Spoonacular API limits. Using local sample data instead.\");\n        return filterSampleRecipes(filters);\n      }\n      const data = await response.json();\n      console.log(\"API response received, results count:\", data.results ? data.results.length : 0);\n      return data.results || [];\n    } catch (error) {\n      console.error('Error fetching recipes:', error);\n      console.warn('Using sample data for search');\n      return filterSampleRecipes(filters);\n    }\n  } catch (error) {\n    console.error('Error in fetchRecipes:', error);\n    return filterSampleRecipes(filters);\n  }\n};\nexport const searchRecipes = fetchRecipes;\nexport const fetchRecipeById = async recipeId => {\n  try {\n    const url = \"https://api.spoonacular.com/recipes/\" + recipeId + \"/information?apiKey=eeb775beabdd459eb5f8e5983978fff1&includeNutrition=true\";\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        console.warn(\"API request failed with status \" + response.status);\n        // Try to find the recipe in sample data as fallback\n        const sampleRecipe = sampleRecipes.find(r => r.id === parseInt(recipeId));\n        if (sampleRecipe) {\n          console.log(\"Found recipe in sample data:\", sampleRecipe.title);\n          return sampleRecipe;\n        }\n        throw new Error(\"Failed to fetch recipe with ID \" + recipeId);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error fetching recipe with ID \" + recipeId + \":\", error);\n      throw error;\n    }\n  } catch (error) {\n    console.error(\"Error in fetchRecipeById:\", error);\n    throw error;\n  }\n};\nexport const getRecipeById = fetchRecipeById;\nexport const getSimilarRecipes = async recipeId => {\n  try {\n    const url = \"https://api.spoonacular.com/recipes/\" + recipeId + \"/similar?apiKey=eeb775beabdd459eb5f8e5983978fff1&number=4\";\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        console.warn(\"API request failed with status \" + response.status);\n        // Return random recipes from sample data as fallback\n        console.log(\"Using sample data for similar recipes\");\n        const shuffled = [...sampleRecipes].sort(() => 0.5 - Math.random());\n        return shuffled.slice(0, 4);\n      }\n      const similarRecipes = await response.json();\n\n      // Fetch full details for each similar recipe\n      const detailedRecipes = await Promise.all(similarRecipes.map(recipe => fetchRecipeById(recipe.id)));\n      return detailedRecipes;\n    } catch (error) {\n      console.error(\"Error fetching similar recipes for ID \" + recipeId + \":\", error);\n      // Return random recipes from sample data as fallback\n      const shuffled = [...sampleRecipes].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 4);\n    }\n  } catch (error) {\n    console.error(\"Error in getSimilarRecipes:\", error);\n    throw error;\n  }\n};\nexport const getRecommendations = async userProfile => {\n  try {\n    // Default parameters if user profile is not available\n    let diet = '';\n    let intolerances = [];\n    let query = '';\n\n    // If user profile exists, use it to customize recommendations\n    if (userProfile) {\n      if (userProfile.goal === 'Weight Loss') {\n        diet = 'low-calorie';\n      } else if (userProfile.goal === 'Build Muscle') {\n        diet = 'high-protein';\n      }\n      intolerances = userProfile.allergies || [];\n    }\n\n    // Create filters object for fetching recipes\n    const filters = {\n      query,\n      diet,\n      intolerances,\n      sort: 'popularity',\n      maxReadyTime: 60\n    };\n    return await fetchRecipes(filters);\n  } catch (error) {\n    console.error('Error getting recommendations:', error);\n    return filterSampleRecipes({});\n  }\n};\nexport const saveRecipe = async (userId, recipe) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    const userDoc = await getDoc(userRef);\n    if (!userDoc.exists()) {\n      // Create user document if it doesn't exist\n      await setDoc(userRef, {\n        savedRecipes: [recipe]\n      });\n    } else {\n      // Add recipe to existing savedRecipes array\n      await updateDoc(userRef, {\n        savedRecipes: arrayUnion(recipe)\n      });\n    }\n  } catch (error) {\n    console.error('Error saving recipe:', error);\n    throw error;\n  }\n};\nexport const removeRecipe = async (userId, recipeId) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    const userDoc = await getDoc(userRef);\n    if (userDoc.exists()) {\n      const savedRecipes = userDoc.data().savedRecipes || [];\n      const recipeToRemove = savedRecipes.find(recipe => recipe.id === recipeId);\n      if (recipeToRemove) {\n        await updateDoc(userRef, {\n          savedRecipes: arrayRemove(recipeToRemove)\n        });\n      }\n    }\n  } catch (error) {\n    console.error('Error removing recipe:', error);\n    throw error;\n  }\n};\nexport const getSavedRecipes = async userId => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    const userDoc = await getDoc(userRef);\n    if (userDoc.exists()) {\n      return userDoc.data().savedRecipes || [];\n    }\n    return [];\n  } catch (error) {\n    console.error('Error getting saved recipes:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getFirestore","collection","doc","getDoc","setDoc","updateDoc","arrayUnion","arrayRemove","query","where","getDocs","app","API_KEY","API_BASE_URL","db","sampleRecipes","id","title","image","readyInMinutes","servings","vegetarian","vegan","glutenFree","dairyFree","filterSampleRecipes","filters","filtered","toLowerCase","filter","recipe","includes","diet","maxReadyTime","fetchRecipes","cuisine","intolerances","sort","url","encodeURIComponent","length","join","console","log","response","fetch","ok","warn","status","info","data","json","results","error","searchRecipes","fetchRecipeById","recipeId","sampleRecipe","find","r","parseInt","Error","getRecipeById","getSimilarRecipes","shuffled","Math","random","slice","similarRecipes","detailedRecipes","Promise","all","map","getRecommendations","userProfile","goal","allergies","saveRecipe","userId","userRef","userDoc","exists","savedRecipes","removeRecipe","recipeToRemove","getSavedRecipes"],"sources":["C:/Users/SoohyukJANG/Documents/GitHub/SEPM-Priv/SEPM/src/services/apiService.js"],"sourcesContent":["import { getFirestore, collection, doc, getDoc, setDoc, updateDoc, arrayUnion, arrayRemove, query, where, getDocs } from 'firebase/firestore';\r\nimport { app } from '../firebase/config';\r\n\r\nconst API_KEY = 'eeb775beabdd459eb5f8e5983978fff1';\r\nconst API_BASE_URL = 'https://api.spoonacular.com';\r\n\r\nconst db = getFirestore(app);\r\n\r\n// Sample data to use when API calls fail\r\nconst sampleRecipes = [\r\n  {\r\n    id: 715538,\r\n    title: \"Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs\",\r\n    image: \"https://spoonacular.com/recipeImages/715538-312x231.jpg\",\r\n    readyInMinutes: 45,\r\n    servings: 2,\r\n    vegetarian: true,\r\n    vegan: false,\r\n    glutenFree: false,\r\n    dairyFree: false\r\n  },\r\n  {\r\n    id: 716429,\r\n    title: \"Simple Skillet Lasagna\",\r\n    image: \"https://spoonacular.com/recipeImages/716429-312x231.jpg\",\r\n    readyInMinutes: 35,\r\n    servings: 4,\r\n    vegetarian: false,\r\n    vegan: false,\r\n    glutenFree: false,\r\n    dairyFree: false\r\n  },\r\n  {\r\n    id: 715497,\r\n    title: \"Berry Banana Breakfast Smoothie\",\r\n    image: \"https://spoonacular.com/recipeImages/715497-312x231.jpg\",\r\n    readyInMinutes: 5,\r\n    servings: 1,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 721146,\r\n    title: \"Homemade Strawberry Lemonade\",\r\n    image: \"https://spoonacular.com/recipeImages/721146-312x231.jpg\",\r\n    readyInMinutes: 15,\r\n    servings: 8,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 782622,\r\n    title: \"Chocolate Peanut Butter Smoothie\",\r\n    image: \"https://spoonacular.com/recipeImages/782622-312x231.jpg\",\r\n    readyInMinutes: 5,\r\n    servings: 1,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: false\r\n  },\r\n  {\r\n    id: 794349,\r\n    title: \"Broccoli and Chickpea Rice Salad\",\r\n    image: \"https://spoonacular.com/recipeImages/794349-312x231.jpg\",\r\n    readyInMinutes: 45,\r\n    servings: 6,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 715415,\r\n    title: \"Red Lentil Soup with Chicken and Turnips\",\r\n    image: \"https://spoonacular.com/recipeImages/715415-312x231.jpg\",\r\n    readyInMinutes: 55,\r\n    servings: 8,\r\n    vegetarian: false,\r\n    vegan: false,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 716406,\r\n    title: \"Asparagus and Pea Soup\",\r\n    image: \"https://spoonacular.com/recipeImages/716406-312x231.jpg\",\r\n    readyInMinutes: 30,\r\n    servings: 2,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 644387,\r\n    title: \"Garlicky Kale\",\r\n    image: \"https://spoonacular.com/recipeImages/644387-312x231.jpg\", \r\n    readyInMinutes: 45,\r\n    servings: 2,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 715446,\r\n    title: \"Slow Cooker Beef Stew\",\r\n    image: \"https://spoonacular.com/recipeImages/715446-312x231.jpg\",\r\n    readyInMinutes: 490,\r\n    servings: 6,\r\n    vegetarian: false,\r\n    vegan: false,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 782601,\r\n    title: \"Red Kidney Bean Jambalaya\",\r\n    image: \"https://spoonacular.com/recipeImages/782601-312x231.jpg\",\r\n    readyInMinutes: 45,\r\n    servings: 6,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 795751,\r\n    title: \"Chicken Fajita Stuffed Bell Pepper\",\r\n    image: \"https://spoonacular.com/recipeImages/795751-312x231.jpg\",\r\n    readyInMinutes: 45,\r\n    servings: 6,\r\n    vegetarian: false,\r\n    vegan: false,\r\n    glutenFree: true,\r\n    dairyFree: false\r\n  },\r\n  {\r\n    id: 766453,\r\n    title: \"Hummus and Veggies Wrap\",\r\n    image: \"https://spoonacular.com/recipeImages/766453-312x231.jpg\",\r\n    readyInMinutes: 45,\r\n    servings: 2,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 716627,\r\n    title: \"Easy Homemade Rice and Beans\",\r\n    image: \"https://spoonacular.com/recipeImages/716627-312x231.jpg\",\r\n    readyInMinutes: 35,\r\n    servings: 2,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 798400,\r\n    title: \"Spicy Black Bean and Corn Burgers\",\r\n    image: \"https://spoonacular.com/recipeImages/798400-312x231.jpg\",\r\n    readyInMinutes: 25,\r\n    servings: 12,\r\n    vegetarian: true,\r\n    vegan: true,\r\n    glutenFree: true,\r\n    dairyFree: true\r\n  },\r\n  {\r\n    id: 646738,\r\n    title: \"Grilled Salmon with Avocado Greek Salsa and Orzo\",\r\n    image: \"https://spoonacular.com/recipeImages/646738-312x231.jpg\", \r\n    readyInMinutes: 15,\r\n    servings: 4,\r\n    vegetarian: false,\r\n    vegan: false,\r\n    glutenFree: false,\r\n    dairyFree: true\r\n  }\r\n];\r\n\r\n// Filter sample recipes based on user filters\r\nconst filterSampleRecipes = (filters) => {\r\n  let filtered = [...sampleRecipes];\r\n  \r\n  if (filters.query) {\r\n    const query = filters.query.toLowerCase();\r\n    filtered = filtered.filter(recipe => \r\n      recipe.title.toLowerCase().includes(query)\r\n    );\r\n  }\r\n  \r\n  if (filters.diet === 'vegetarian') {\r\n    filtered = filtered.filter(recipe => recipe.vegetarian);\r\n  } else if (filters.diet === 'vegan') {\r\n    filtered = filtered.filter(recipe => recipe.vegan);\r\n  } else if (filters.diet === 'gluten free') {\r\n    filtered = filtered.filter(recipe => recipe.glutenFree);\r\n  } else if (filters.diet === 'dairy free') {\r\n    filtered = filtered.filter(recipe => recipe.dairyFree);\r\n  }\r\n  \r\n  if (filters.maxReadyTime) {\r\n    filtered = filtered.filter(recipe => recipe.readyInMinutes <= filters.maxReadyTime);\r\n  }\r\n  \r\n  return filtered;\r\n};\r\n\r\n\r\nexport const fetchRecipes = async (filters) => {\r\n  try {\r\n    const { query, cuisine, diet, intolerances, maxReadyTime, sort } = filters;\r\n    \r\n    // Use direct URL construction\r\n    let url = \"https://api.spoonacular.com/recipes/complexSearch?apiKey=eeb775beabdd459eb5f8e5983978fff1\";\r\n    \r\n    // Add parameters\r\n    url += \"&number=50\";\r\n    if (query) url += \"&query=\" + encodeURIComponent(query);\r\n    if (cuisine) url += \"&cuisine=\" + encodeURIComponent(cuisine);\r\n    if (diet) url += \"&diet=\" + encodeURIComponent(diet);\r\n    if (intolerances && intolerances.length > 0) url += \"&intolerances=\" + encodeURIComponent(intolerances.join(','));\r\n    if (maxReadyTime) url += \"&maxReadyTime=\" + maxReadyTime;\r\n    \r\n    // Add sort parameter\r\n    if (sort === 'popularity') {\r\n      url += '&sort=popularity';\r\n    } else if (sort === 'healthiness') {\r\n      url += '&sort=healthiness';\r\n    } else if (sort === 'time') {\r\n      url += '&sort=time';\r\n    } else {\r\n      url += '&sort=popularity';\r\n    }\r\n    \r\n    // Add additional information\r\n    url += '&addRecipeInformation=true';\r\n    url += '&fillIngredients=true';\r\n    \r\n    console.log(\"Fetching recipes with URL:\", url);\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        console.warn(\"API request failed with status \" + response.status + \". Using sample data.\");\r\n        console.info(\"This is expected behavior due to Spoonacular API limits. Using local sample data instead.\");\r\n        return filterSampleRecipes(filters);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"API response received, results count:\", data.results ? data.results.length : 0);\r\n      return data.results || [];\r\n    } catch (error) {\r\n      console.error('Error fetching recipes:', error);\r\n      console.warn('Using sample data for search');\r\n      return filterSampleRecipes(filters);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error in fetchRecipes:', error);\r\n    return filterSampleRecipes(filters);\r\n  }\r\n};\r\n\r\nexport const searchRecipes = fetchRecipes;\r\n\r\nexport const fetchRecipeById = async (recipeId) => {\r\n  try {\r\n    const url = \"https://api.spoonacular.com/recipes/\" + recipeId + \"/information?apiKey=eeb775beabdd459eb5f8e5983978fff1&includeNutrition=true\";\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        console.warn(\"API request failed with status \" + response.status);\r\n        // Try to find the recipe in sample data as fallback\r\n        const sampleRecipe = sampleRecipes.find(r => r.id === parseInt(recipeId));\r\n        if (sampleRecipe) {\r\n          console.log(\"Found recipe in sample data:\", sampleRecipe.title);\r\n          return sampleRecipe;\r\n        }\r\n        throw new Error(\"Failed to fetch recipe with ID \" + recipeId);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error fetching recipe with ID \" + recipeId + \":\", error);\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in fetchRecipeById:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getRecipeById = fetchRecipeById;\r\n\r\nexport const getSimilarRecipes = async (recipeId) => {\r\n  try {\r\n    const url = \"https://api.spoonacular.com/recipes/\" + recipeId + \"/similar?apiKey=eeb775beabdd459eb5f8e5983978fff1&number=4\";\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        console.warn(\"API request failed with status \" + response.status);\r\n        // Return random recipes from sample data as fallback\r\n        console.log(\"Using sample data for similar recipes\");\r\n        const shuffled = [...sampleRecipes].sort(() => 0.5 - Math.random());\r\n        return shuffled.slice(0, 4);\r\n      }\r\n      \r\n      const similarRecipes = await response.json();\r\n      \r\n      // Fetch full details for each similar recipe\r\n      const detailedRecipes = await Promise.all(\r\n        similarRecipes.map(recipe => fetchRecipeById(recipe.id))\r\n      );\r\n      \r\n      return detailedRecipes;\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar recipes for ID \" + recipeId + \":\", error);\r\n      // Return random recipes from sample data as fallback\r\n      const shuffled = [...sampleRecipes].sort(() => 0.5 - Math.random());\r\n      return shuffled.slice(0, 4);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in getSimilarRecipes:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getRecommendations = async (userProfile) => {\r\n  try {\r\n    // Default parameters if user profile is not available\r\n    let diet = '';\r\n    let intolerances = [];\r\n    let query = '';\r\n    \r\n    // If user profile exists, use it to customize recommendations\r\n    if (userProfile) {\r\n      if (userProfile.goal === 'Weight Loss') {\r\n        diet = 'low-calorie';\r\n      } else if (userProfile.goal === 'Build Muscle') {\r\n        diet = 'high-protein';\r\n      }\r\n      \r\n      intolerances = userProfile.allergies || [];\r\n    }\r\n    \r\n    // Create filters object for fetching recipes\r\n    const filters = {\r\n      query,\r\n      diet,\r\n      intolerances,\r\n      sort: 'popularity',\r\n      maxReadyTime: 60\r\n    };\r\n    \r\n    return await fetchRecipes(filters);\r\n  } catch (error) {\r\n    console.error('Error getting recommendations:', error);\r\n    return filterSampleRecipes({});\r\n  }\r\n};\r\n\r\nexport const saveRecipe = async (userId, recipe) => {\r\n  try {\r\n    const userRef = doc(db, 'users', userId);\r\n    const userDoc = await getDoc(userRef);\r\n    \r\n    if (!userDoc.exists()) {\r\n      // Create user document if it doesn't exist\r\n      await setDoc(userRef, {\r\n        savedRecipes: [recipe]\r\n      });\r\n    } else {\r\n      // Add recipe to existing savedRecipes array\r\n      await updateDoc(userRef, {\r\n        savedRecipes: arrayUnion(recipe)\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error saving recipe:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const removeRecipe = async (userId, recipeId) => {\r\n  try {\r\n    const userRef = doc(db, 'users', userId);\r\n    const userDoc = await getDoc(userRef);\r\n    \r\n    if (userDoc.exists()) {\r\n      const savedRecipes = userDoc.data().savedRecipes || [];\r\n      const recipeToRemove = savedRecipes.find(recipe => recipe.id === recipeId);\r\n      \r\n      if (recipeToRemove) {\r\n        await updateDoc(userRef, {\r\n          savedRecipes: arrayRemove(recipeToRemove)\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error removing recipe:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getSavedRecipes = async (userId) => {\r\n  try {\r\n    const userRef = doc(db, 'users', userId);\r\n    const userDoc = await getDoc(userRef);\r\n    \r\n    if (userDoc.exists()) {\r\n      return userDoc.data().savedRecipes || [];\r\n    }\r\n    \r\n    return [];\r\n  } catch (error) {\r\n    console.error('Error getting saved recipes:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}