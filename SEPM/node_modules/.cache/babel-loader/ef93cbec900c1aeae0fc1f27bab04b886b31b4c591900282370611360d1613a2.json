{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SoohyukJANG\\\\Documents\\\\GitHub\\\\SEPM-Priv\\\\SEPM\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, sendPasswordResetEmail } from 'firebase/auth';\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore';\nimport { auth, db } from '../firebase/config';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Clear error after 5 seconds\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => setError(''), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n\n  // Register a new user\n  const signup = async (email, password, displayName) => {\n    try {\n      setError('');\n      setLoading(true);\n\n      // Create user in Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Update profile with display name\n      await updateProfile(userCredential.user, {\n        displayName\n      });\n\n      // Create user document in Firestore\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        email,\n        displayName,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n        preferences: {\n          theme: 'light',\n          emailNotifications: true\n        },\n        healthProfile: null\n      });\n      return userCredential.user;\n    } catch (err) {\n      console.error('Signup error:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Log in an existing user\n  const login = async (email, password) => {\n    try {\n      setError('');\n      setLoading(true);\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return userCredential.user;\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Log out the current user\n  const logout = async () => {\n    try {\n      setError('');\n      await signOut(auth);\n    } catch (err) {\n      console.error('Logout error:', err);\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Reset password\n  const resetPassword = async email => {\n    try {\n      setError('');\n      setLoading(true);\n      await sendPasswordResetEmail(auth, email);\n    } catch (err) {\n      console.error('Reset password error:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get user profile data\n  const getUserProfile = async userId => {\n    try {\n      const userDoc = await getDoc(doc(db, 'users', userId));\n      if (userDoc.exists()) {\n        return userDoc.data();\n      }\n      return null;\n    } catch (err) {\n      console.error('Get user profile error:', err);\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Update current user profile\n  const updateUserProfile = async userData => {\n    if (!currentUser) {\n      setError('No user is logged in');\n      return;\n    }\n    try {\n      setLoading(true);\n      const userRef = doc(db, 'users', currentUser.uid);\n      await setDoc(userRef, {\n        ...userData,\n        updatedAt: serverTimestamp()\n      }, {\n        merge: true\n      });\n\n      // Update display name if provided\n      if (userData.displayName) {\n        await updateProfile(currentUser, {\n          displayName: userData.displayName\n        });\n      }\n      return true;\n    } catch (err) {\n      console.error('Update profile error:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Listen for auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    loading,\n    error,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    getUserProfile,\n    updateUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"c+DJCFkW7na8iPcJf3STY1zy8LE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","sendPasswordResetEmail","doc","setDoc","getDoc","serverTimestamp","auth","db","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","timer","setTimeout","clearTimeout","signup","email","password","displayName","userCredential","user","uid","createdAt","updatedAt","preferences","theme","emailNotifications","healthProfile","err","console","message","login","logout","resetPassword","getUserProfile","userId","userDoc","exists","data","updateUserProfile","userData","userRef","merge","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SoohyukJANG/Documents/GitHub/SEPM-Priv/SEPM/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged,\r\n  updateProfile,\r\n  sendPasswordResetEmail\r\n} from 'firebase/auth';\r\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { auth, db } from '../firebase/config';\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Clear error after 5 seconds\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => setError(''), 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  // Register a new user\r\n  const signup = async (email, password, displayName) => {\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      \r\n      // Create user in Firebase Auth\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      // Update profile with display name\r\n      await updateProfile(userCredential.user, { displayName });\r\n      \r\n      // Create user document in Firestore\r\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n        email,\r\n        displayName,\r\n        createdAt: serverTimestamp(),\r\n        updatedAt: serverTimestamp(),\r\n        preferences: {\r\n          theme: 'light',\r\n          emailNotifications: true\r\n        },\r\n        healthProfile: null\r\n      });\r\n      \r\n      return userCredential.user;\r\n    } catch (err) {\r\n      console.error('Signup error:', err);\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Log in an existing user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      return userCredential.user;\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Log out the current user\r\n  const logout = async () => {\r\n    try {\r\n      setError('');\r\n      await signOut(auth);\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      setError(err.message);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (email) => {\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await sendPasswordResetEmail(auth, email);\r\n    } catch (err) {\r\n      console.error('Reset password error:', err);\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Get user profile data\r\n  const getUserProfile = async (userId) => {\r\n    try {\r\n      const userDoc = await getDoc(doc(db, 'users', userId));\r\n      if (userDoc.exists()) {\r\n        return userDoc.data();\r\n      }\r\n      return null;\r\n    } catch (err) {\r\n      console.error('Get user profile error:', err);\r\n      setError(err.message);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Update current user profile\r\n  const updateUserProfile = async (userData) => {\r\n    if (!currentUser) {\r\n      setError('No user is logged in');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const userRef = doc(db, 'users', currentUser.uid);\r\n      await setDoc(userRef, {\r\n        ...userData,\r\n        updatedAt: serverTimestamp()\r\n      }, { merge: true });\r\n      \r\n      // Update display name if provided\r\n      if (userData.displayName) {\r\n        await updateProfile(currentUser, { displayName: userData.displayName });\r\n      }\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Update profile error:', err);\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Listen for auth state changes\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    \r\n    // Cleanup subscription\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    getUserProfile,\r\n    updateUserProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}