{"ast":null,"code":"// src/firebase/config.js\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getStorage, connectStorageEmulator } from 'firebase/storage';\nimport { getAnalytics } from 'firebase/analytics';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAW8nOi840Z9spmYNJ3n0BNB8FH9Al0imo\",\n  authDomain: \"nutrigen-bot.firebaseapp.com\",\n  databaseURL: \"https://nutrigen-bot-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"nutrigen-bot\",\n  storageBucket: \"nutrigen-bot.firebasestorage.app\",\n  messagingSenderId: \"826370626365\",\n  appId: \"1:826370626365:web:95e02188be1903c8db2b54\",\n  measurementId: \"G-NN9N8W4RE9\"\n};\n\n// Initialize Firebase with debug logs\nconsole.log('Initializing Firebase with config:', {\n  projectId: firebaseConfig.projectId,\n  authDomain: firebaseConfig.authDomain,\n  databaseURL: firebaseConfig.databaseURL\n});\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get Authentication instance\nconst auth = getAuth(app);\n\n// Get Firestore instance\nconst db = getFirestore(app);\n\n// Get Storage instance\nconst storage = getStorage(app);\n\n// Get Analytics instance (only in browser environment)\nlet analytics = null;\nif (typeof window !== 'undefined') {\n  analytics = getAnalytics(app);\n}\nconsole.log('Firebase initialized successfully');\nconsole.log('Auth instance:', auth ? 'Created' : 'Failed');\nconsole.log('Firestore instance:', db ? 'Created' : 'Failed');\nconsole.log('Storage instance:', storage ? 'Created' : 'Failed');\n\n// Use local emulators when in development if needed\nif (process.env.NODE_ENV === 'development' && process.env.REACT_APP_USE_FIREBASE_EMULATOR === 'true') {\n  console.log('Using Firebase emulators');\n  connectAuthEmulator(auth, 'http://localhost:9099');\n  connectFirestoreEmulator(db, 'localhost', 8080);\n  connectStorageEmulator(storage, 'localhost', 9199);\n}\nexport { app, auth, db, storage, analytics };","map":{"version":3,"names":["initializeApp","getAuth","connectAuthEmulator","getFirestore","connectFirestoreEmulator","getStorage","connectStorageEmulator","getAnalytics","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","console","log","app","auth","db","storage","analytics","window","process","env","NODE_ENV","REACT_APP_USE_FIREBASE_EMULATOR"],"sources":["C:/Users/SoohyukJANG/Documents/GitHub/SEPM-Priv/SEPM/src/firebase/config.js"],"sourcesContent":["// src/firebase/config.js\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\r\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\r\nimport { getStorage, connectStorageEmulator } from 'firebase/storage';\r\nimport { getAnalytics } from 'firebase/analytics';\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAW8nOi840Z9spmYNJ3n0BNB8FH9Al0imo\",\r\n  authDomain: \"nutrigen-bot.firebaseapp.com\",\r\n  databaseURL: \"https://nutrigen-bot-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"nutrigen-bot\",\r\n  storageBucket: \"nutrigen-bot.firebasestorage.app\",\r\n  messagingSenderId: \"826370626365\",\r\n  appId: \"1:826370626365:web:95e02188be1903c8db2b54\",\r\n  measurementId: \"G-NN9N8W4RE9\"\r\n};\r\n\r\n// Initialize Firebase with debug logs\r\nconsole.log('Initializing Firebase with config:', {\r\n  projectId: firebaseConfig.projectId,\r\n  authDomain: firebaseConfig.authDomain,\r\n  databaseURL: firebaseConfig.databaseURL\r\n});\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Get Authentication instance\r\nconst auth = getAuth(app);\r\n\r\n// Get Firestore instance\r\nconst db = getFirestore(app);\r\n\r\n// Get Storage instance\r\nconst storage = getStorage(app);\r\n\r\n// Get Analytics instance (only in browser environment)\r\nlet analytics = null;\r\nif (typeof window !== 'undefined') {\r\n  analytics = getAnalytics(app);\r\n}\r\n\r\nconsole.log('Firebase initialized successfully');\r\nconsole.log('Auth instance:', auth ? 'Created' : 'Failed');\r\nconsole.log('Firestore instance:', db ? 'Created' : 'Failed');\r\nconsole.log('Storage instance:', storage ? 'Created' : 'Failed');\r\n\r\n// Use local emulators when in development if needed\r\nif (process.env.NODE_ENV === 'development' && process.env.REACT_APP_USE_FIREBASE_EMULATOR === 'true') {\r\n  console.log('Using Firebase emulators');\r\n  connectAuthEmulator(auth, 'http://localhost:9099');\r\n  connectFirestoreEmulator(db, 'localhost', 8080);\r\n  connectStorageEmulator(storage, 'localhost', 9199);\r\n}\r\n\r\nexport { app, auth, db, storage, analytics };\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,eAAe;AAC5D,SAASC,YAAY,EAAEC,wBAAwB,QAAQ,oBAAoB;AAC3E,SAASC,UAAU,EAAEC,sBAAsB,QAAQ,kBAAkB;AACrE,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,WAAW,EAAE,wEAAwE;EACrFC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,kCAAkC;EACjDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACAC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE;EAChDN,SAAS,EAAEJ,cAAc,CAACI,SAAS;EACnCF,UAAU,EAAEF,cAAc,CAACE,UAAU;EACrCC,WAAW,EAAEH,cAAc,CAACG;AAC9B,CAAC,CAAC;;AAEF;AACA,MAAMQ,GAAG,GAAGnB,aAAa,CAACQ,cAAc,CAAC;;AAEzC;AACA,MAAMY,IAAI,GAAGnB,OAAO,CAACkB,GAAG,CAAC;;AAEzB;AACA,MAAME,EAAE,GAAGlB,YAAY,CAACgB,GAAG,CAAC;;AAE5B;AACA,MAAMG,OAAO,GAAGjB,UAAU,CAACc,GAAG,CAAC;;AAE/B;AACA,IAAII,SAAS,GAAG,IAAI;AACpB,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EACjCD,SAAS,GAAGhB,YAAY,CAACY,GAAG,CAAC;AAC/B;AAEAF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;AAChDD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,IAAI,GAAG,SAAS,GAAG,QAAQ,CAAC;AAC1DH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEG,EAAE,GAAG,SAAS,GAAG,QAAQ,CAAC;AAC7DJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC;;AAEhE;AACA,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIF,OAAO,CAACC,GAAG,CAACE,+BAA+B,KAAK,MAAM,EAAE;EACpGX,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvChB,mBAAmB,CAACkB,IAAI,EAAE,uBAAuB,CAAC;EAClDhB,wBAAwB,CAACiB,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC;EAC/Cf,sBAAsB,CAACgB,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC;AACpD;AAEA,SAASH,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}